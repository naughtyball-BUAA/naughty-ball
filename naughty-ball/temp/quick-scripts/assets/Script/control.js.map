{"version":3,"sources":["control.js"],"names":["cc","Class","extends","Component","properties","start","rot","X","Y","Z","node","rotation","x","y","z","wx","startGyroscope","interval","onGyroscopeChange","res","update","dt"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,WAAM,iBAAY;AAAA;;AACd,aAAKC,GAAL,GAAW,CAAX;;AAEA,aAAKC,CAAL,GAAO,CAAP;AACA,aAAKC,CAAL,GAAO,CAAP;AACA,aAAKC,CAAL,GAAO,KAAKC,IAAL,CAAUC,QAAjB;AACA,aAAKC,CAAL,GAAO,CAAP;AACA,aAAKC,CAAL,GAAO,CAAP;AACA,aAAKC,CAAL,GAAO,CAAP;AACA;;AAEAC,WAAGC,cAAH,CAAkB;AACbC,sBAAS;AADI,SAAlB;AAGA;AACCF,WAAGG,iBAAH,CAAqB,UAACC,GAAD,EAAO;AACzB,gBAAG,MAAKb,GAAL,IAAW,CAAd,EAAgB;AACf;AACA;AACA,sBAAKG,CAAL,IAAUU,IAAIL,CAAJ,GAAM,IAAN,GAAW,GAAX,GAAe,GAAzB;AACA;AACJ,SANA;AAOJ,KA/CI;AAgDLM,UAhDK,kBAgDGC,EAhDH,EAgDO;AACR;AACA;AACA;AACA;;AAEA,YAAG,KAAKf,GAAL,IAAY,CAAf,EAAiB;AACb,iBAAKI,IAAL,CAAUC,QAAV,GAAqB,KAAKF,CAA1B;AACH;AACJ;AAzDI,CAAT","file":"control.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start:function () {\r\n        this.rot = 0;\r\n\r\n        this.X=0;\r\n        this.Y=0;\r\n        this.Z=this.node.rotation;\r\n        this.x=0;\r\n        this.y=0;\r\n        this.z=0;\r\n        //cc.log(this.node.getComponent(cc.Label).string)\r\n\r\n        wx.startGyroscope({\r\n             interval:'game',\r\n        });\r\n        //console.log('11111');\r\n         wx.onGyroscopeChange((res)=>{\r\n            if(this.rot ==1){\r\n             // this.X += res.x*0.02*180;\r\n             // this.Y += res.y*0.02*180;\r\n             this.Z -= res.z*0.02*180*1.1;\r\n            }\r\n        });\r\n    },\r\n    update (dt) {\r\n        //积分\r\n        //在label上显示\r\n        //this.node.getComponent(cc.Label).string = this.X.toFixed(2) + ' ' + this.Y.toFixed(2) + ' ' + this.Z.toFixed(2);\r\n        //控制节点旋转\r\n\r\n        if(this.rot == 1){\r\n            this.node.rotation = this.Z;\r\n        }\r\n    },\r\n});\r\n"]}