{"version":3,"sources":["end_control.js"],"names":["cc","Class","extends","Component","properties","start","end","name","director","getScene","getName","nextscense","parseInt","substring","length","log","onCollisionEnter","other","self","base","that","Action","scaleTo","navigate","callFunc","loadScene","pipe","sequence","node","runAction"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfQ,KAHP;;AAqBL;;AAEA;;AAEAC,SAzBK,mBAyBG;AACJ,aAAKC,GAAL,GAAW,CAAX;AACA,YAAIC,OAAOP,GAAGQ,QAAH,CAAYC,QAAZ,GAAuBC,OAAvB,EAAX;AACA,aAAKC,UAAL,GAAkBC,SAASL,KAAKM,SAAL,CAAe,CAAf,EAAiBN,KAAKO,MAAtB,CAAT,IAAwC,CAA1D;AACAd,WAAGe,GAAH,CAAO,KAAKJ,UAAZ;AACH,KA9BI;;;AAgCLK,sBAAkB,0BAAUC,KAAV,EAAiBC,IAAjB,EAAuB;AAC1C,YAAIC,OAAO,MAAX;AACK,YAAIC,OAAO,IAAX;AACA,aAAKd,GAAL,GAAW,CAAX;AACA,YAAIe,SAASrB,GAAGsB,OAAH,CAAW,CAAX,EAAc,CAAd,EAAiB,CAAjB,CAAb;AACA,YAAIC,WAAWvB,GAAGwB,QAAH,CAAY,YAAW;AAClCJ,iBAAKd,GAAL,GAAW,CAAX;AACAN,eAAGQ,QAAH,CAAYiB,SAAZ,CAAsBN,OAAOC,KAAKT,UAAlC;AACH,SAHc,CAAf;AAIA,YAAIe,OAAO1B,GAAG2B,QAAH,CAAYN,MAAZ,EAAmBE,QAAnB,CAAX;AACA,aAAKK,IAAL,CAAUC,SAAV,CAAoBH,IAApB;AACH;;AAED;AA7CK,CAAT","file":"end_control.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start() {\r\n        this.end = 0;\r\n        var name = cc.director.getScene().getName();\r\n        this.nextscense = parseInt(name.substring(4,name.length))+1;\r\n        cc.log(this.nextscense);\r\n    },\r\n\r\n    onCollisionEnter: function (other, self) {\r\n \t\tvar base = 'game';\r\n        var that = this;\r\n        this.end = 1;\r\n        let Action = cc.scaleTo(2, 3, 3);\r\n        let navigate = cc.callFunc(function (){\r\n            that.end = 0;\r\n            cc.director.loadScene(base + that.nextscense);\r\n        })\r\n        let pipe = cc.sequence(Action,navigate);\r\n        this.node.runAction(pipe);\r\n    }\r\n\r\n    // update (dt) {},\r\n});"]}